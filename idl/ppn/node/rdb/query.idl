/* This file is part of the the dci project. Copyright (C) 2013-2023 vopl, shtoba.
   This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public
   License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
   You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. */

require "pql.idl"
require "ppn/node/link/remote.idl"

scope ppn::node::rdb
{
    scope query
    {
        flags Scope
        {
            online,
            candidates
        }

        interface Result
        {
            in start();

            out next(link::Id, link::Remote);

            in stop();
            out stopped();
        }

    }

    interface Query
    {
        in iterativeMinimize(
            query::Scope scope,
            pql::Expression constraints,
            pql::Expression rate
        ) -> query::Result;

        in continuous(
            query::Scope scope,
            pql::Expression constraints
        ) -> query::Result;

        in oneStage(
            query::Scope scope,
            pql::Expression constraints
        ) -> query::Result;

        in record(
            link::Id,
            list<pql::Column> columns
        ) -> tuple<link::Remote, list<pql::Value>>;

        in select(
            query::Scope scope,
            pql::Expression constraints,
            list<pql::Column> columns,
            uint32 limit
        ) -> list<tuple<link::Id, link::Remote, list<pql::Value>>>;
    }
}
